devtools::use_package("Seurat")
usethis::use_package("Seurat")
library(Seurat)
library(cowplot)
ctrl.data <- read.table(file = "../data/immune_control_expression_matrix.txt.gz", sep = "\t")
ctrl.data <- read.table(file = "C:/Users/al3459va/Downloads/immune_alignment_expression_matrices/immune_control_expression_matrix.txt.gz", sep = "\t")
stim.data <- read.table(file = "C:/Users/al3459va/Downloads/immune_alignment_expression_matrices/immune_stimulated_expression_matrix.txt.gz", sep = "\t")
# Set up control object
ctrl <- CreateSeuratObject(counts = ctrl.data, project = "IMMUNE_CTRL", min.cells = 5)
ctrl$stim <- "CTRL"
ctrl <- subset(ctrl, subset = nFeature_RNA > 500)
ctrl <- NormalizeData(ctrl, verbose = FALSE)
ctrl <- FindVariableFeatures(ctrl, selection.method = "vst", nfeatures = 2000)
# Set up stimulated object
stim <- CreateSeuratObject(counts = stim.data, project = "IMMUNE_STIM", min.cells = 5)
stim$stim <- "STIM"
stim <- subset(stim, subset = nFeature_RNA > 500)
stim <- NormalizeData(stim, verbose = FALSE)
stim <- FindVariableFeatures(stim, selection.method = "vst", nfeatures = 2000)
immune.anchors <- FindIntegrationAnchors(object.list = list(ctrl, stim), dims = 1:20)
immune.combined <- IntegrateData(anchorset = immune.anchors, dims = 1:20)
DefaultAssay(immune.combined) <- "integrated"
# Run the standard workflow for visualization and clustering
immune.combined <- ScaleData(immune.combined, verbose = FALSE)
immune.combined <- RunPCA(immune.combined, npcs = 30, verbose = FALSE)
# t-SNE and Clustering
immune.combined <- RunUMAP(immune.combined, reduction = "pca", dims = 1:20)
immune.combined <- FindNeighbors(immune.combined, reduction = "pca", dims = 1:20)
immune.combined <- FindClusters(immune.combined, resolution = 0.5)
# Visualization
p1 <- DimPlot(immune.combined, reduction = "umap", group.by = "stim")
p2 <- DimPlot(immune.combined, reduction = "umap", label = TRUE)
plot_grid(p1, p2)
immune.combined
pbmc1k = WhichCells(immune.combined, downsample = 100)
pbmc1k = immune.combined[pbmc1k,]
pbmc1k = immune.combined[,pbmc1k]
pbmc1k
pbmc1k = WhichCells(immune.combined, downsample = 80)
pbmc1k = immune.combined[,pbmc1k]
pbmc1k
pbmc1k = WhichCells(immune.combined, downsample = 75)
pbmc1k = immune.combined[,pbmc1k]
pbmc1k
Idents(pbmc1k) = "stim"
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
pbmc1k = WhichCells(immune.combined, downsample = 75)
pbmc1k = immune.combined[,pbmc1k]
pbmc1k
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
Idents(pbmc1k) = "stim"
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
usethis::use_data(pbmc1k)
gc()
devtools::use_package("SeuratObject")
usethis::use_package("SeuratObject")
tools::resaveRdaFiles("data/")
library(RightCIBERSORTxTools)
?CIBERSORTx_Reference_Matrix_Builder
pbmc1k
?pbmc1k
?CIBERSORTx_Reference_Matrix_Builder
refmat1
load("data/pbmc1k.rda")
# Rename clusters of seurat_clusters
Idents(immune.combined) <- "seurat_clusters"
clusters.names = rep("cluster.", length(levels(immune.combined)))
library(Seurat)
library(cowplot)
ctrl.data <- read.table(file = "C:/Users/al3459va/Downloads/immune_alignment_expression_matrices/immune_control_expression_matrix.txt.gz", sep = "\t")
# Rename clusters of seurat_clusters
clusters.names = rep("cluster", length(levels(pbmc1k)))
# Rename clusters of seurat_clusters
Idents(pbmc1k) = "seurat_clusters"
clusters.names = rep("cluster", length(levels(pbmc1k)))
clusters.names = paste(clusters.names,levels(pbmc1k$seurat_clusters),".")
clusters.names = paste(clusters.names,levels(pbmc1k$seurat_clusters),sep=".")
clusters.names = rep("cluster", length(levels(pbmc1k)))
clusters.names = paste(clusters.names,levels(pbmc1k$seurat_clusters),sep=".")
clusters.names = rep("cluster", length(levels(pbmc1k)))
clusters.names = paste(clusters.names,levels(pbmc1k),sep=".")
clusters.names = paste(rep("cluster", length(levels(pbmc1k))),levels(pbmc1k),sep=".")
clusters.names = paste(rep("Cluster", length(levels(pbmc1k))),levels(pbmc1k),sep=".")
# Rename clusters of seurat_clusters
clusters.names = paste(rep("Cluster", length(levels(pbmc1k))),levels(pbmc1k),sep=".")
names(clusters.names) = levels(pbmc1k)
pbmc1k = RenameIdents(pbmc1k, clusters.names)
pbmc1k@meta.data$seurat_clusters = pbmc1k@active.ident
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
Idents(pbmc1k) = "stim"
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
Idents(pbmc1k) = "seurat_clusters"
DimPlot(pbmc1k, reduction = "umap", label = TRUE)
# Seurat object ready to be used for CIBERSORTx_Reference_Matrix_Builder examples
Idents(pbmc1k) = "stim"
usethis::use_data(pbmc1k)
gc()
usethis::use_data_raw("pbmc1k")
load("data/pbmc1k.rda")
#' PBMC public dataset from Seurat tutorial
#'
#' @format ## 'pbmc1k'
#' A Seurat object containing 1k PBMCs from 10X Genomics
#'
#' @source <https://satijalab.org/seurat/archive/v3.0/immune_alignment.html>
pbmc1k
View(pbmc1k)
Idents(pbmc1k) = "orig.ident"
DimPlot(pbmc1k, reduction = "umap")
gc()
library(RightCIBERSORTxTools)
?CIBERSORTx_Reference_Matrix_Builder
?pbmc1k
?tidyr::who
library(RightCIBERSORTxTools)
?pbmc1k
library(RightCIBERSORTxTools)
?pbmc1k
library(RightCIBERSORTxTools)
?pbmc1k
?CIBERSORTx_Reference_Matrix_Builder
usethis::use_readme_rmd()
usethis::git_remotes()
usethis::create_github_token()
gitcreds::gitcreds_set(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)
gitcreds::gitcreds_set()
